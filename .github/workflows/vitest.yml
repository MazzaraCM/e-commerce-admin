name: Vitest Tests on PR
on:
  pull_request:
    branches: [ main, Development ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Merge PR into main
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git checkout main
        git merge ${{ github.event.pull_request.head.sha }}
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Determine package manager and install dependencies
      run: |
        if [ -f "yarn.lock" ]; then
          echo "Using Yarn"
          yarn install --frozen-lockfile
          yarn add -D @vitest/coverage-v8 @vitest/reporter-junit
        elif [ -f "package-lock.json" ]; then
          echo "Using npm ci"
          npm ci
          npm install -D @vitest/coverage-v8 @vitest/reporter-junit
        else
          echo "No lockfile found, using npm install"
          npm install
          npm install -D @vitest/coverage-v8 @vitest/reporter-junit
        fi
    - name: Run Vitest tests
      run: |
        if [ -f "yarn.lock" ]; then
          yarn test
        else
          npm run test
        fi
    - name: Run Coverage
      run: |
        if [ -f "yarn.lock" ]; then
          yarn coverage
        else
          npm run coverage
        fi
    - name: List reports directory
      run: ls -R reports
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Vitest Tests          # Name of the check run which will be created
        path: reports/junit.xml     # Path to test results
        reporter: jest-junit        # Format of test results
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report
        path: coverage/
